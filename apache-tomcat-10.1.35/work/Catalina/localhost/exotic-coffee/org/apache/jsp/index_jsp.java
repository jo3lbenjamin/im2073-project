/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.35
 * Generated at: 2025-02-27 15:01:16 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.Statement;
import java.sql.ResultSet;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(6);
    _jspx_imports_classes.add("java.sql.Connection");
    _jspx_imports_classes.add("java.sql.ResultSet");
    _jspx_imports_classes.add("java.sql.Statement");
    _jspx_imports_classes.add("java.sql.DriverManager");
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("    <title>Exotic Coffee Marketplace</title>\r\n");
      out.write("    <script src=\"https://cdn.tailwindcss.com\"></script>\r\n");
      out.write("</head>\r\n");
      out.write("<body class=\"bg-gray-100\">\r\n");
      out.write("\r\n");
      out.write("    <!-- ✅ Navigation Bar -->\r\n");
      out.write("    <nav class=\"bg-white shadow-md p-4 flex justify-between items-center\">\r\n");
      out.write("        <h1 class=\"text-2xl font-bold text-gray-800\">exotic coffee.</h1>\r\n");
      out.write("        <ul class=\"flex space-x-6\">\r\n");
      out.write("            <li><a href=\"#shop\" class=\"text-gray-600 hover:text-black\">Shop</a></li>\r\n");
      out.write("            <li><a href=\"#subscribe\" class=\"text-gray-600 hover:text-black\">Subscribe</a></li>\r\n");
      out.write("            <li><a href=\"#about\" class=\"text-gray-600 hover:text-black\">About Us</a></li>\r\n");
      out.write("        </ul>\r\n");
      out.write("    </nav>\r\n");
      out.write("\r\n");
      out.write("    <!-- ✅ Hero Section -->\r\n");
      out.write("    <section class=\"relative h-screen flex items-center justify-center text-white\"> \r\n");
      out.write("        <video autoplay muted loop autoplay muted loop class=\"absolute w-full h-full object-cover\">\r\n");
      out.write("            <source src=\"https://cdn.pixabay.com/video/2024/04/25/209419_large.mp4\" type=\"video/mp4\">\r\n");
      out.write("        </video>\r\n");
      out.write("\r\n");
      out.write("        <div class=\"relative z-10 text-center\">\r\n");
      out.write("            <h2 class=\"text-5xl font-bold\">A World of Coffee, One Click Away</h2>\r\n");
      out.write("            <p class=\"text-lg mt-4\">Discover the finest coffee from Vietnam, Hawaii, Ethiopia, and beyond.</p>\r\n");
      out.write("            <a href=\"#shop\" class=\"mt-6 inline-block bg-black text-white py-3 px-6 rounded-full hover:bg-gray-800\">Explore Now</a>\r\n");
      out.write("        </div>\r\n");
      out.write("    </section>\r\n");
      out.write("\r\n");
      out.write("    <!-- ✅ Subscription Plans -->\r\n");
      out.write("    <section id=\"subscribe\" class=\"py-16 text-center bg-gray-50\">\r\n");
      out.write("        <h3 class=\"text-3xl font-bold\">Subscribe & Enjoy</h3>\r\n");
      out.write("        <p class=\"mt-2\">Get fresh coffee delivered to your door monthly.</p>\r\n");
      out.write("        <div class=\"grid grid-cols-1 md:grid-cols-3 gap-6 px-6 mt-6\">\r\n");
      out.write("            <div class=\"bg-white p-6 shadow-md rounded-md\">\r\n");
      out.write("                <h4 class=\"text-lg font-semibold\">Single Origin Plan</h4>\r\n");
      out.write("                <p class=\"text-gray-600 mt-2\">$19.99/month</p>\r\n");
      out.write("                <button class=\"mt-4 bg-black text-white py-2 px-4 rounded\">Subscribe</button>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"bg-white p-6 shadow-md rounded-md\">\r\n");
      out.write("                <h4 class=\"text-lg font-semibold\">Blend Collection</h4>\r\n");
      out.write("                <p class=\"text-gray-600 mt-2\">$29.99/month</p>\r\n");
      out.write("                <button class=\"mt-4 bg-black text-white py-2 px-4 rounded\">Subscribe</button>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"bg-white p-6 shadow-md rounded-md\">\r\n");
      out.write("                <h4 class=\"text-lg font-semibold\">Premium Reserve</h4>\r\n");
      out.write("                <p class=\"text-gray-600 mt-2\">$39.99/month</p>\r\n");
      out.write("                <button class=\"mt-4 bg-black text-white py-2 px-4 rounded\">Subscribe</button>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("    </section>\r\n");
      out.write("\r\n");
      out.write("    <!-- ✅ Featured Coffee -->\r\n");
      out.write("    <section id=\"shop\" class=\"py-16 text-center\">\r\n");
      out.write("        <h3 class=\"text-3xl font-bold\">Our Best Sellers</h3>\r\n");
      out.write("        <div class=\"grid grid-cols-1 md:grid-cols-3 gap-6 px-6 mt-6\">\r\n");
      out.write("            ");
  
                // Connect to MySQL and fetch coffee products
                try {
                    Class.forName("com.mysql.cj.jdbc.Driver");
                    Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/global_coffee_shop", "root", "Transcom#188");
                    Statement stmt = conn.createStatement();
                    ResultSet rs = stmt.executeQuery("SELECT * FROM coffee_products ORDER BY price DESC LIMIT 3");

                    while (rs.next()) {
            
      out.write("\r\n");
      out.write("            <div class=\"bg-white p-4 shadow-md rounded-md\">\r\n");
      out.write("                <img src=\"");
      out.print( rs.getString("image_url") );
      out.write("\" style=\"height: 250px; object-fit: contain;\" class=\"w-full rounded-md\" alt=\"Coffee\">\r\n");
      out.write("                <h4 class=\"text-lg font-semibold mt-2\">");
      out.print( rs.getString("name") );
      out.write("</h4>\r\n");
      out.write("                <p class=\"text-gray-600\">Origin: ");
      out.print( rs.getString("origin") );
      out.write("</p>\r\n");
      out.write("                <p class=\"text-gray-600\">Price: $");
      out.print( rs.getDouble("price") );
      out.write("</p>\r\n");
      out.write("                <button class=\"mt-4 bg-black text-white py-2 px-4 rounded\">Add to Cart</button>\r\n");
      out.write("            </div>\r\n");
      out.write("            ");
  
                    }
                    conn.close();
                } catch (Exception e) {
                    out.println("<p>Error fetching coffee data.</p>");
                }
            
      out.write("\r\n");
      out.write("        </div>\r\n");
      out.write("    </section>\r\n");
      out.write("\r\n");
      out.write("    <!-- ✅ Footer -->\r\n");
      out.write("    <footer class=\"bg-black text-white text-center py-4 mt-12\">\r\n");
      out.write("        <p>&copy; 2024 Global Coffee | All Rights Reserved</p>\r\n");
      out.write("    </footer>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
